<?php
/**
 * Theme functions.
 *
 * @package {{ theme.namespace }}
 */

namespace {{ theme.namespace }};

// Exit if called directly.
defined( 'ABSPATH' ) || exit;

/**
 * Main theme class.
 *
 * @since 0.1.0
 */
class {{ theme.class }} {

	/**
	 * The theme version.
	 *
	 * @since 0.1.0
	 * @var string
	 */
	const VERSION = '0.1.0';

	/**
	 * The theme ID.
	 *
	 * This provides a consistent ID string for things like option names.
	 *
	 * @since 0.1.0
	 * @var string
	 */
	const THEME_ID = '{{ theme.id }}';

	/**
	 * Theme class constructor.
	 *
	 * @since 0.1.0
	 */
	public function __construct() {
		add_action( 'after_setup_theme', [ $this, 'theme_init' ] );
		add_action( 'widgets_init', [ $this, 'register_sidebars' ] );
	}

	/**
	 * Initializes the theme class.
	 *
	 * @since 0.1.0
	 */
	public function theme_init() {

		// Include our theme class files.
		$this->includes();

		// Setup theme features.
		$this->theme_setup();

		// Featured image sizes.
		$this->register_image_sizes();
	}

	/**
	 * Includes theme files.
	 *
	 * @since 0.1.0
	 */
	public function includes() {

	}

	/**
	 * Calls to `add_theme_support()`, `add_image_size()`, etc. go here.
	 *
	 * @since 0.1.0
	 */
	public function theme_setup() {

	}

	/**
	 * Registers custom sidebars.
	 *
	 * @since 0.1.0
	 */
	public function register_sidebars() {

	}
}

// Instantiate the main theme class.
new {{ theme.class }}();
